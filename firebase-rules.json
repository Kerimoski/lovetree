{
  "realtime_database_rules": {
    "rules": {
      ".read": false,
      ".write": false,
      "status": {
        "$userId": {
          ".read": true,
          ".write": "$userId === auth.uid"
        }
      },
      "messages": {
        "$connectionId": {
          ".read": "root.child('connections').child($connectionId).child('userId').val() === auth.uid || root.child('connections').child($connectionId).child('pairedWithId').val() === auth.uid",
          ".write": "root.child('connections').child($connectionId).child('userId').val() === auth.uid || root.child('connections').child($connectionId).child('pairedWithId').val() === auth.uid"
        }
      },
      "connections": {
        "$connectionId": {
          ".read": "data.child('userId').val() === auth.uid || data.child('pairedWithId').val() === auth.uid",
          ".write": "newData.child('userId').val() === auth.uid || newData.child('pairedWithId').val() === auth.uid"
        }
      }
    }
  },
  
  "firestore_rules": {
    "rules_version": "2",
    "service": "cloud.firestore",
    "match /databases/{database}/documents": {
      "match /users/{userId}": {
        "allow read, write": "request.auth.uid == userId"
      },
      "match /connections/{connectionId}": {
        "allow read": "resource.data.userId == request.auth.uid || resource.data.pairedWithId == request.auth.uid",
        "allow write": "request.resource.data.userId == request.auth.uid || request.resource.data.pairedWithId == request.auth.uid"
      },
      "match /memories/{memoryId}": {
        "allow read": "resource.data.userId == request.auth.uid || exists(/databases/$(database)/documents/connections/$(resource.data.connectionId)) && (get(/databases/$(database)/documents/connections/$(resource.data.connectionId)).data.userId == request.auth.uid || get(/databases/$(database)/documents/connections/$(resource.data.connectionId)).data.pairedWithId == request.auth.uid)",
        "allow write": "request.resource.data.userId == request.auth.uid"
      }
    }
  }
} 